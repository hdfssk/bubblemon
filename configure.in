# -*-m4-*- Process this file with autoconf to produce a configure script.


######################################################################
#
# General system tests required for building platform independent
# stuff.
#
#
AC_INIT([Bubbling Load Monitor], 2.0.17, johan.walles@gmail.com, bubblemon)
AC_CONFIG_SRCDIR(src/bubblemon.h)

# Install in /usr by default since many GNOME installations aren't
# aware of the existence of /usr/local.
AC_PREFIX_DEFAULT(/usr)

AM_INIT_AUTOMAKE([1.5])
AC_PREREQ(2.61)

AM_CONFIG_HEADER(config.h)

AC_PROG_INTLTOOL([0.35])

# Compiler setup
AM_PROG_CC_C_O
if test "x$GCC" = "xyes"; then
  # -Wno-missing-field-initializers is because of
  # http://bugs.debian.org/509663
  #
  # -Wno-unused-parameter is because in gnome2-ui.c our function
  # prototypes are decided by the GNOME API, and we have to accept
  # some parameters we never use.
  CFLAGS="-g -O2 -Wall -Werror -Wextra -Wno-unused-parameter -Wno-missing-field-initializers"
  AC_SUBST(CFLAGS)
fi
AC_ISC_POSIX
AC_HEADER_STDC

# Find some more or less non-standard data types
AC_CHECK_TYPE(u_int32_t, unsigned int)
AC_CHECK_TYPE(u_int16_t, unsigned short int)
AC_CHECK_TYPE(u_int8_t, unsigned char)

# Find out whether we are on a big-endian system
AC_C_BIGENDIAN

# For i18n and l10n
ALL_LINGUAS="sv fr pl de ko fi da pt ro es no hu it is ru ca pt_BR nl"

# Check if the user wants all languages to be compiled
AC_ARG_WITH(
  all-linguas,
  [  --with-all-linguas      Compile support for all avaliable languages],
  all_linguas=yes)

if test "x$all_linguas" = "xyes"; then
  LINGUAS=$ALL_LINGUAS
fi

AC_MSG_CHECKING(what languages to include)
AC_MSG_RESULT($LINGUAS)

GETTEXT_PACKAGE=bubblemon
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Gettext wants to know...])
AC_SUBST(GETTEXT_PACKAGE)

# For i18n and l10n (continued)
AM_GNU_GETTEXT([external])

# Where do we put locale information?
if test "x$prefix" = "xNONE"; then
  LOCALEDIR=$ac_default_prefix/share/locale
else
  LOCALEDIR=$prefix/share/locale
fi
AC_DEFINE_UNQUOTED(LOCALEDIR, "$LOCALEDIR", [Where language files get installed])

# We need the exp2() function for generating the tool tip
AC_SEARCH_LIBS(exp2, m)


######################################################################
#
# Bubblemon specific tests
#
#

# Check if the user wants to enable profiling
AC_ARG_ENABLE(
  profiling,
  [  --enable-profiling      Pass profiling options to the compiler],
  profiling=yes)

if test "x$profiling" = "xyes"; then
  AC_MSG_CHECKING(what profiling flags to pass to the compiler)

  profilingFLAGS="-pg"

  CFLAGS="$CFLAGS $profilingFLAGS"

  AC_MSG_RESULT($profilingFLAGS)

  AC_DEFINE([ENABLE_PROFILING], [], [Build a bubblemon that bubbles a lot for a minute and then exits])

  AC_MSG_WARN()
  AC_MSG_WARN(You have enabled profiling by specifying the --enable-profiling switch.)
  AC_MSG_WARN(Please don't install the applet the usual way; read the file PROFILING)
  AC_MSG_WARN(for instructions.)
  AC_MSG_WARN()
fi

PKG_CHECK_MODULES(libgtop,
        [libgtop-2.0 >= 2.0.0],
        ,
        AC_MSG_ERROR([libgtop 2.0 not found.]))
LIBGTOP_CFLAGS=`$PKG_CONFIG --cflags "libgtop-2.0"`
AC_SUBST(LIBGTOP_CFLAGS)
LIBGTOP_LIBS=`$PKG_CONFIG --libs "libgtop-2.0"`
AC_SUBST(LIBGTOP_LIBS)

##############################
# GNOME 2.x specific tests

AC_ARG_ENABLE(
  [gnome2],
  [  --disable-gnome2        do not build GNOME 2 applet],
  [gnome2=$enableval],
  [gnome2=yes])

if test "x$gnome2" = "xyes"; then
  PKG_CHECK_MODULES(GNOME2,
          [libpanelapplet-2.0 >= 2.0.0],
          ,
          AC_MSG_ERROR([GNOME2 panel applet library not found.]))
fi

##############################
# XFCE4 specific tests

AC_ARG_ENABLE(
  [xfce4],
  [  --enable-xfce4          build XFCE4 plugin],
  [xfce4=$enableval],
  [xfce4=no])

if test "x$xfce4" = "xyes"; then
  PKG_CHECK_MODULES(XFCE,
          [libxfcegui4-1.0 >= 4.3.20
           libxfce4panel-1.0 >= 4.3.20],
          ,
          AC_MSG_ERROR([XFCE4 panel plugin libraries not found.]))
  LIBXFCE4PANEL_VERSION=`$PKG_CONFIG --modversion "libxfce4panel-1.0"`
  LIBXFCE4PANEL_CFLAGS=`$PKG_CONFIG --cflags "libxfce4panel-1.0"`
  AC_SUBST(LIBXFCE4PANEL_CFLAGS)
  LIBXFCE4PANEL_LIBS=`$PKG_CONFIG --libs "libxfce4panel-1.0"`
  AC_SUBST(LIBXFCE4PANEL_LIBS)
  LIBXFCEGUI4_VERSION=`$PKG_CONFIG --modversion "libxfcegui4-1.0"`
  LIBXFCEGUI4_CFLAGS=`$PKG_CONFIG --cflags "libxfcegui4-1.0"`
  AC_SUBST(LIBXFCEGUI4_CFLAGS)
  LIBXFCEGUI4_LIBS=`$PKG_CONFIG --libs "libxfcegui4-1.0"`
  AC_SUBST(LIBXFCEGUI4_LIBS)
fi

AC_SUBST(BUBBLEMON_CFLAGS)
AC_SUBST(BUBBLEMON_LIBS)

######################################################################
#
# Output our test results
#
#
AC_OUTPUT([
Makefile
m4/Makefile
po/Makefile.in
po/Makefile
src/Makefile
gnome/Makefile
xfce/Makefile
icons/Makefile
pixmaps/Makefile
man/Makefile
man/bubblemon-gnome2.1
man/hu/Makefile
man/hu/bubblemon-gnome2.1
man/sv/Makefile
man/sv/bubblemon-gnome2.1
])
